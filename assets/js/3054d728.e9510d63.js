"use strict";(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[8256],{7077:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>p});var a=t(7396),i=t(4848),o=t(8453);const r={slug:"2025-02-10-Setup-flyway-migration-with-spring-boot",title:"Setup flyway migration with spring boot",authors:["vijay"],tags:["flyway","spring"]},s=void 0,l={authorsImageUrls:[void 0]},p=[{value:"slug: 2025-02-10-Setup-flyway-migration-with-spring-boot\ntitle: Setup Flyway Migration with Spring Boot\nauthors: [vijay]\ntags: [flyway, spring]",id:"slug-2025-02-10-setup-flyway-migration-with-spring-boottitle-setup-flyway-migration-with-spring-bootauthors-vijaytags-flyway-spring",level:2},{value:"Step 1: Add Flyway Dependencies in Gradle",id:"step-1-add-flyway-dependencies-in-gradle",level:2},{value:"Step 2: Configure Database Connection in <code>application.yaml</code>",id:"step-2-configure-database-connection-in-applicationyaml",level:2},{value:"Step 3: Organizing Migration Scripts Based on Environment",id:"step-3-organizing-migration-scripts-based-on-environment",level:2},{value:"Local Environment",id:"local-environment",level:3},{value:"Production Environment",id:"production-environment",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"slug-2025-02-10-setup-flyway-migration-with-spring-boottitle-setup-flyway-migration-with-spring-bootauthors-vijaytags-flyway-spring",children:"slug: 2025-02-10-Setup-flyway-migration-with-spring-boot\ntitle: Setup Flyway Migration with Spring Boot\nauthors: [vijay]\ntags: [flyway, spring]"}),"\n",(0,i.jsx)(e.h1,{id:"setup-flyway-migration-with-spring-boot",children:"Setup Flyway Migration with Spring Boot"}),"\n",(0,i.jsx)(e.p,{children:"Database migrations are essential for maintaining consistency and version control in applications. Flyway is a popular database migration tool that integrates seamlessly with Spring Boot. In this guide, we will set up Flyway in a Spring Boot application and configure it for different environments."}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"step-1-add-flyway-dependencies-in-gradle",children:"Step 1: Add Flyway Dependencies in Gradle"}),"\n",(0,i.jsxs)(e.p,{children:["The first step is to update your ",(0,i.jsx)(e.code,{children:"build.gradle"})," file to include the Flyway dependencies."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-gradle",children:"plugins {\n\t...\n}\n\ngroup = 'com.vkpapps'\nversion = '0.0.1-SNAPSHOT'\n\njava {\n\ttoolchain {\n\t\tlanguageVersion = JavaLanguageVersion.of(21)\n\t}\n}\n\nconfigurations {\n\tcompileOnly {\n\t\textendsFrom annotationProcessor\n\t}\n}\n\nrepositories {\n\tmavenCentral()\n}\n\ndependencies {\n  // Other dependencies\n\timplementation 'org.flywaydb:flyway-core'\n\timplementation 'org.flywaydb:flyway-database-postgresql'\n}\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.h2,{id:"step-2-configure-database-connection-in-applicationyaml",children:["Step 2: Configure Database Connection in ",(0,i.jsx)(e.code,{children:"application.yaml"})]}),"\n",(0,i.jsxs)(e.p,{children:["Next, we configure the database connection and enable Flyway in ",(0,i.jsx)(e.code,{children:"application.yaml"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yml",children:"spring:\n  application:\n    name: flyway-migration-example\n  jackson:\n    property-naming-strategy: SNAKE_CASE\n  datasource:\n    driver-class-name: org.postgresql.Driver\n    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=flyway-migration-example\n    username: vijay\n    password:\n  jpa:\n    database-platform: org.hibernate.dialect.PostgreSQLDialect\n    hibernate:\n      ddl-auto: none\n    properties:\n      hibernate:\n        format_sql: true\n        show_sql: true\n  flyway:\n    baseline-on-migrate: true\n    enabled: true\n    locations: classpath:db/migration/common,classpath:db/migration/local\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"step-3-organizing-migration-scripts-based-on-environment",children:"Step 3: Organizing Migration Scripts Based on Environment"}),"\n",(0,i.jsxs)(e.p,{children:["Flyway allows organizing migration scripts into different folders and applying them based on the environment. We configure ",(0,i.jsx)(e.code,{children:"locations"})," accordingly."]}),"\n",(0,i.jsx)(e.h3,{id:"local-environment",children:"Local Environment"}),"\n",(0,i.jsx)(e.p,{children:"In the local environment, we also run an insert script to seed the database with dummy data:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-properties",children:'spring:\n  datasource:\n    driver-class-name: org.postgresql.Driver\n    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=flyway-migration-example\n    username: vijay\n    password:\n  jpa:\n    database-platform: org.hibernate.dialect.PostgreSQLDialect\n    hibernate:\n      ddl-auto: update  # or "none" if schema is managed manually\n    properties:\n      hibernate:\n        format_sql: true\n        show_sql: true\n  flyway:\n    baseline-on-migrate: true\n    enabled: true\n    locations: classpath:db/migration/common,classpath:db/migration/local\n'})}),"\n",(0,i.jsx)(e.h3,{id:"production-environment",children:"Production Environment"}),"\n",(0,i.jsx)(e.p,{children:"In production, we only run the common database migration scripts and avoid inserting dummy data:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-properties",children:"spring:\n  datasource:\n    driver-class-name: org.postgresql.Driver\n    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=flyway-migration-example\n    username: vijay\n    password:\n  jpa:\n    database-platform: org.hibernate.dialect.PostgreSQLDialect\n    hibernate:\n      ddl-auto: none\n    properties:\n      hibernate:\n        format_sql: true\n        show_sql: true\n  flyway:\n    baseline-on-migrate: true\n    enabled: true\n    locations: classpath:db/migration/common\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(e.p,{children:"Setting up Flyway in a Spring Boot application ensures seamless database migrations while maintaining version control. By structuring migrations based on environments, we can manage schema changes efficiently without affecting production stability."}),"\n",(0,i.jsxs)(e.p,{children:["Now that your Flyway setup is complete, you can start adding migration scripts in ",(0,i.jsx)(e.code,{children:"db/migration/common"})," and ",(0,i.jsx)(e.code,{children:"db/migration/local"})," folders to control database schema changes. Happy coding!"]})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>s});var a=t(6540);const i={},o=a.createContext(i);function r(n){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),a.createElement(o.Provider,{value:e},n.children)}},7396:n=>{n.exports=JSON.parse('{"permalink":"/blog/2025-02-10-Setup-flyway-migration-with-spring-boot","editUrl":"https://github.com/vijaypatidar/my-portfolio/tree/main/blog/2025-02-10-Setup-flyway-migration-with-spring-boot/index.md","source":"@site/blog/2025-02-10-Setup-flyway-migration-with-spring-boot/index.md","title":"Setup flyway migration with spring boot","description":"---","date":"2025-02-10T00:00:00.000Z","tags":[{"inline":true,"label":"flyway","permalink":"/blog/tags/flyway"},{"inline":false,"label":"Spring","permalink":"/blog/tags/spring","description":"Spring Boot"}],"readingTime":1.935,"hasTruncateMarker":true,"authors":[{"name":"Vijay Patidar","title":"Fullstack Software Engineer","url":"https://github.com/vijaypatidar","imageURL":"https://github.com/vijaypatidar.png","key":"vijay","page":null}],"frontMatter":{"slug":"2025-02-10-Setup-flyway-migration-with-spring-boot","title":"Setup flyway migration with spring boot","authors":["vijay"],"tags":["flyway","spring"]},"unlisted":false,"prevItem":{"title":"Setup ANTLR in Java Project and Write Grammar for Parsing Boolean Algebra Expressions","permalink":"/blog/setup-antlr-java-boolean-grammar"},"nextItem":{"title":"Publish Android App Bundle to Play Store Using GitHub Actions","permalink":"/blog/publish-android-app-bundle-to-play-store-using-github-actions"}}')}}]);