"use strict";(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[1028],{4808:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=n(4848),t=n(8453);const r={slug:"build-docker-image-using-jib",title:"Build Docker Image Using Jib",authors:["vijay"],tags:["java","spring"]},s=void 0,o={permalink:"/blog/build-docker-image-using-jib",editUrl:"https://github.com/vijaypatidar/my-portfolio/tree/main/blog/2024-06-08-build-docker-image-using-jib/index.md",source:"@site/blog/2024-06-08-build-docker-image-using-jib/index.md",title:"Build Docker Image Using Jib",description:"Docker Build",date:"2024-06-08T00:00:00.000Z",tags:[{inline:!1,label:"Java",permalink:"/blog/tags/java",description:"Java"},{inline:!1,label:"Spring",permalink:"/blog/tags/spring",description:"Spring Boot"}],readingTime:1.89,hasTruncateMarker:!0,authors:[{name:"Vijay Patidar",title:"Fullstack Software Engineer",url:"https://github.com/vijaypatidar",imageURL:"https://github.com/vijaypatidar.png",key:"vijay",page:null}],frontMatter:{slug:"build-docker-image-using-jib",title:"Build Docker Image Using Jib",authors:["vijay"],tags:["java","spring"]},unlisted:!1,prevItem:{title:"What Is Stream In java",permalink:"/blog/what-is-stream-in-java"}},l={authorsImageUrls:[void 0]},d=[{value:"Overview",id:"overview",level:2},{value:"What is Jib?",id:"what-is-jib",level:2},{value:"Let&#39;s configure gradle to use Jib",id:"lets-configure-gradle-to-use-jib",level:2},{value:"Build And Publish Image To Docker Registry",id:"build-and-publish-image-to-docker-registry",level:2},{value:"Benefits",id:"benefits",level:2}];function c(e){const i={code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.p,{children:(0,a.jsx)(i.img,{alt:"Docker Build",src:n(9023).A+"",width:"1280",height:"720"})}),"\n",(0,a.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(i.p,{children:"This blog post introduces Jib, a powerful tool for building optimized Docker images for Java applications. Jib stands out by eliminating the need for a Docker daemon and expertise in Docker best practices, making it a convenient option for developers. Integrated as a plugin in Gradle or Maven projects, Jib simplifies the process of containerizing Java applications."}),"\n",(0,a.jsx)(i.h2,{id:"what-is-jib",children:"What is Jib?"}),"\n",(0,a.jsx)(i.p,{children:"Jib builds optimized Docker images for your Java applications without a Docker daemon or deep mastery of Docker best practices.\nYou can use it as a plugin in your Gradle or Maven project."}),"\n",(0,a.jsx)(i.h2,{id:"lets-configure-gradle-to-use-jib",children:"Let's configure gradle to use Jib"}),"\n",(0,a.jsxs)(i.p,{children:["Jib is used as a plugin, so we need to update the ",(0,a.jsx)(i.code,{children:"build.gradle"})," file. We simply need to add the Jib plugin and define the Jib configuration block."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-gradle",metastring:'title="build.gradle"',children:'plugins {\n    . . .\n    id \'com.google.cloud.tools.jib\' version \'3.1.1\'\n}\n\n. . .\n\njib {\n    from {\n        image = "amazoncorretto:11"\n    }\n    to {\n        image = "docker.io/vijaypatidar31/webflux"\n        tags = ["latest", version]\n    }\n    container {\n        mainClass = "com.vkpapps.demo.CoolSpringWebfluxApplication"\n        jvmFlags = []\n        ports = ["443"]\n    }\n}\n'})}),"\n",(0,a.jsx)(i.h2,{id:"build-and-publish-image-to-docker-registry",children:"Build And Publish Image To Docker Registry"}),"\n",(0,a.jsx)(i.p,{children:"After configuring the jib block, you can run a gradle task to build and publish an image to the Docker registry (gradle jib)."}),"\n",(0,a.jsx)(i.h2,{id:"benefits",children:"Benefits"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Using Jib over a traditional Dockerfile for building and packaging Java applications offers several benefits:"}),"\n",(0,a.jsx)(i.li,{children:"Simplified Configuration: Integrates with Gradle/Maven, eliminating the need for a separate Dockerfile."}),"\n",(0,a.jsx)(i.li,{children:"Faster Builds: Uses advanced caching mechanisms, reducing the need to rebuild unchanged layers."}),"\n",(0,a.jsx)(i.li,{children:"Reproducible Builds: Ensures builds are reproducible by isolating the build environment from the runtime environment."}),"\n",(0,a.jsx)(i.li,{children:"No Docker Daemon Required: Builds Docker images without requiring a Docker daemon, suitable for CI/CD pipelines or restricted environments."}),"\n",(0,a.jsx)(i.li,{children:"Automatic Base Image Updates: This can automatically pull the latest base image, ensuring the use of up-to-date images with the latest security patches."}),"\n",(0,a.jsx)(i.li,{children:"Layered Image Construction: Automatically separates the application into layers, optimizing the build and pushing process."}),"\n",(0,a.jsx)(i.li,{children:"Integration with Container Registries: Seamlessly integrates with popular container registries, making it easy to push images directly from your build tool."}),"\n",(0,a.jsx)(i.li,{children:"Advanced Configuration Options: Provides options for customizing the image build, such as specifying entry points, environment variables, JVM flags, and exposed ports."}),"\n"]})]})}function g(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},9023:(e,i,n)=>{n.d(i,{A:()=>a});const a=n.p+"assets/images/docker-build-05d797831f0942b183f15ea01c423f40.png"}}]);