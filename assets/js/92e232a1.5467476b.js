"use strict";(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[4546],{4699:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var r=t(2678),i=t(4848),o=t(8453);const a={title:"Clean and Modular: Integrating Spring Boot with Vite + React in a Gradle Project",description:"Learn how to structure a full-stack application by integrating a Vite + React frontend with a Spring Boot backend using Gradle multi-module setup.",slug:"spring-boot-vite-react-gradle",authors:["vijay"],tags:["spring-boot","react","gradle","vite"]},l=void 0,d={authorsImageUrls:[void 0]},s=[{value:"<strong>Clean and Modular: Integrating Spring Boot with Vite + React in a Gradle Project</strong>",id:"clean-and-modular-integrating-spring-boot-with-vite--react-in-a-gradle-project",level:2},{value:"<strong>Setting Up the Frontend with Vite + React</strong>",id:"setting-up-the-frontend-with-vite--react",level:2},{value:"<strong>Registering the Vite Project as a Gradle Submodule</strong>",id:"registering-the-vite-project-as-a-gradle-submodule",level:2},{value:"<strong>Include Frontend as a Submodule in Root Gradle Project</strong>",id:"include-frontend-as-a-submodule-in-root-gradle-project",level:2},{value:"<strong>Serve Frontend from Spring Boot</strong>",id:"serve-frontend-from-spring-boot",level:2},{value:"<strong>Building the Project</strong>",id:"building-the-project",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"clean-and-modular-integrating-spring-boot-with-vite--react-in-a-gradle-project",children:(0,i.jsx)(n.strong,{children:"Clean and Modular: Integrating Spring Boot with Vite + React in a Gradle Project"})}),"\n",(0,i.jsxs)(n.p,{children:["While working on a full-stack Spring Boot application, I needed to develop a React-based frontend and serve it alongside the backend. To streamline the development and build processes, I decided to manage the frontend as a submodule within the same Gradle project using the ",(0,i.jsx)(n.code,{children:"gradle-node-plugin"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:""}),"\n",(0,i.jsx)(n.h2,{id:"setting-up-the-frontend-with-vite--react",children:(0,i.jsx)(n.strong,{children:"Setting Up the Frontend with Vite + React"})}),"\n",(0,i.jsx)(n.p,{children:"Start by creating a new Vite + React TypeScript project using the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm create vite@latest frontend -- --template react-ts\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This will scaffold a new frontend project inside a ",(0,i.jsx)(n.code,{children:"frontend"})," directory, which you can place within your existing Gradle project."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"registering-the-vite-project-as-a-gradle-submodule",children:(0,i.jsx)(n.strong,{children:"Registering the Vite Project as a Gradle Submodule"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Create a ",(0,i.jsx)(n.code,{children:"build.gradle"})," file inside the ",(0,i.jsx)(n.code,{children:"frontend/"})," directory"]})," and add the following plugins:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:'plugins {\n    id "com.github.node-gradle.node" version "7.1.0"\n    id "base"\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configure the Node plugin"})," to download and use a specific Node.js version:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:'node {\n    download = true\n    version = "22.12.0"\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Define Gradle tasks"})," to build, clean, and run the frontend:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:"tasks.register('buildFrontend', NpxTask) {\n    dependsOn npmInstall\n    command = 'npm'\n    args = ['run', 'build']\n}\n\ntasks.register('devRun', NpxTask) {\n    dependsOn npmInstall\n    command = 'npm'\n    args = ['run', 'dev']\n}\n\ntasks.register('cleanFrontend', Delete) {\n    group = \"build\"\n    description = \"Cleans the Vite distribution folder\"\n    delete file(\"dist\")\n}\n\ntasks.clean.dependsOn cleanFrontend\ntasks.build.dependsOn buildFrontend\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"include-frontend-as-a-submodule-in-root-gradle-project",children:(0,i.jsx)(n.strong,{children:"Include Frontend as a Submodule in Root Gradle Project"})}),"\n",(0,i.jsxs)(n.p,{children:["Update your ",(0,i.jsx)(n.code,{children:"settings.gradle"})," file to register both modules:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:"rootProject.name = 'fullstack-spring-vite'\n\ninclude 'frontend'\ninclude 'backend'\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"serve-frontend-from-spring-boot",children:(0,i.jsx)(n.strong,{children:"Serve Frontend from Spring Boot"})}),"\n",(0,i.jsxs)(n.p,{children:["Modify your backend\u2019s ",(0,i.jsx)(n.code,{children:"build.gradle"})," (or ",(0,i.jsx)(n.code,{children:"build.gradle.kts"}),") to package the frontend static files:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:"bootJar {\n    dependsOn ':frontend:build'\n    from(\"../frontend/dist\") {\n        into \"BOOT-INF/classes/static\"\n    }\n}\n\ntasks.clean.dependsOn ':frontend:clean'\ntasks.build.dependsOn ':frontend:build'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now, whenever you build the backend, it will automatically build the frontend and embed the static files into the Spring Boot JAR under the ",(0,i.jsx)(n.code,{children:"/static"})," directory."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"building-the-project",children:(0,i.jsx)(n.strong,{children:"Building the Project"})}),"\n",(0,i.jsx)(n.p,{children:"To build the entire project:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./gradlew clean build\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will compile both backend and frontend, and the final Spring Boot JAR will include your frontend assets, ready to be served."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udd17 ",(0,i.jsxs)(n.strong,{children:["You can find the complete source code on ",(0,i.jsx)(n.a,{href:"https://github.com/vijaypatidar/fullstack-spring-vite",children:"my GitHub repository"})]})]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},2678:e=>{e.exports=JSON.parse('{"permalink":"/blog/spring-boot-vite-react-gradle","editUrl":"https://github.com/vijaypatidar/my-portfolio/tree/main/blog/2025-07-20-spring-boot-vite-react-gradle/index.md","source":"@site/blog/2025-07-20-spring-boot-vite-react-gradle/index.md","title":"Clean and Modular: Integrating Spring Boot with Vite + React in a Gradle Project","description":"Learn how to structure a full-stack application by integrating a Vite + React frontend with a Spring Boot backend using Gradle multi-module setup.","date":"2025-07-20T00:00:00.000Z","tags":[{"inline":true,"label":"spring-boot","permalink":"/blog/tags/spring-boot"},{"inline":true,"label":"react","permalink":"/blog/tags/react"},{"inline":true,"label":"gradle","permalink":"/blog/tags/gradle"},{"inline":true,"label":"vite","permalink":"/blog/tags/vite"}],"readingTime":1.76,"hasTruncateMarker":true,"authors":[{"name":"Vijay Patidar","title":"Fullstack Software Engineer","url":"https://github.com/vijaypatidar","imageURL":"https://github.com/vijaypatidar.png","key":"vijay","page":null}],"frontMatter":{"title":"Clean and Modular: Integrating Spring Boot with Vite + React in a Gradle Project","description":"Learn how to structure a full-stack application by integrating a Vite + React frontend with a Spring Boot backend using Gradle multi-module setup.","slug":"spring-boot-vite-react-gradle","authors":["vijay"],"tags":["spring-boot","react","gradle","vite"]},"unlisted":false,"nextItem":{"title":"Create Beautiful Vertical Stepper in React Using MUI + TailwindCSS","permalink":"/blog/vertical-stepper-react-mui-tailwind"}}')}}]);