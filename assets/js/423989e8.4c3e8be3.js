"use strict";(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[5359],{7037:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var r=n(5364),a=n(4848),i=n(8453);const o={title:"Create Beautiful Vertical Stepper in React Using MUI + TailwindCSS",description:"Learn how to build a customizable and beautiful vertical stepper component in React with Material UI and Tailwind CSS.",slug:"vertical-stepper-react-mui-tailwind",authors:["vijay"],tags:["react","typescript"]},l=void 0,p={authorsImageUrls:[void 0]},c=[{value:"Verticle Stepper",id:"verticle-stepper",level:2},{value:"\ud83c\udfaf Goal",id:"-goal",level:2},{value:"\ud83e\uddf1 Step 1: Build the Component",id:"-step-1-build-the-component",level:2},{value:"\u2699\ufe0f Step 2: Use the Component",id:"\ufe0f-step-2-use-the-component",level:2}];function s(e){const t={a:"a",code:"code",h2:"h2",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["In this post, we\u2019ll walk through how to create a visually appealing ",(0,a.jsx)(t.strong,{children:"vertical stepper component"})," in React using ",(0,a.jsx)(t.a,{href:"https://mui.com/",children:"Material UI (MUI)"})," and ",(0,a.jsx)(t.a,{href:"https://tailwindcss.com/",children:"Tailwind CSS"}),". This component is fully customizable and comes with gradient connectors, icons, and styled content boxes."]}),"\n",(0,a.jsx)(t.h2,{id:"verticle-stepper",children:(0,a.jsx)(t.img,{alt:"Verticle Stepper",src:n(1322).A+"",width:"3600",height:"1434"})}),"\n",(0,a.jsx)(t.h2,{id:"-goal",children:"\ud83c\udfaf Goal"}),"\n",(0,a.jsxs)(t.p,{children:["We'll build a ",(0,a.jsx)(t.code,{children:"VerticleStepper"})," component that:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Uses MUI\u2019s ",(0,a.jsx)(t.code,{children:"Stepper"}),", ",(0,a.jsx)(t.code,{children:"Step"}),", and ",(0,a.jsx)(t.code,{children:"StepLabel"}),"."]}),"\n",(0,a.jsx)(t.li,{children:"Has a custom connector and step icon."}),"\n",(0,a.jsx)(t.li,{children:"Works with Tailwind for enhanced styling."}),"\n",(0,a.jsx)(t.li,{children:"Is reusable and accepts steps and active state as props."}),"\n"]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"-step-1-build-the-component",children:"\ud83e\uddf1 Step 1: Build the Component"}),"\n",(0,a.jsxs)(t.p,{children:["Create a ",(0,a.jsx)(t.code,{children:"VerticleStepper.tsx"})," file and paste the following code:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import React from "react";\nimport Stepper from "@mui/material/Stepper";\nimport Step from "@mui/material/Step";\nimport StepLabel from "@mui/material/StepLabel";\nimport {\n  StepConnector,\n  stepConnectorClasses,\n  StepContent,\n  styled,\n  Typography,\n  type StepIconProps,\n} from "@mui/material";\nimport { Clock, TickCircle } from "iconsax-reactjs";\n\nexport interface VerticleStepperStep {\n  label: string;\n  content: React.JSX.Element;\n}\nexport interface VerticleStepperProps {\n  steps: VerticleStepperStep[];\n  activeStep: number;\n}\n\n// Custom connector with gradient style\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 22,\n  },\n  [`&.${stepConnectorClasses.active}, &.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        "linear-gradient( 95deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)",\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    height: 36,\n    border: 0,\n    width: 1,\n    marginLeft: 8,\n    marginTop: -8,\n    marginBottom: -8,\n    backgroundColor: "#bdbdbd",\n    ...theme.applyStyles("dark", {\n      backgroundColor: theme.palette.grey[800],\n    }),\n  },\n}));\n\n// Custom step icon\nconst ColorlibStepIconRoot = styled("div")<{\n  ownerState: { completed?: boolean; active?: boolean };\n}>(({ theme }) => ({\n  backgroundColor: "#ccc",\n  zIndex: 1,\n  color: "#fff",\n  width: 40,\n  height: 40,\n  display: "flex",\n  borderRadius: "50%",\n  justifyContent: "center",\n  alignItems: "center",\n  ...theme.applyStyles("dark", {\n    backgroundColor: theme.palette.grey[700],\n  }),\n  variants: [\n    {\n      props: ({ ownerState }) => ownerState.active,\n      style: {\n        backgroundImage:\n          "linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)",\n        boxShadow: "0 4px 10px 0 rgba(0,0,0,.25)",\n      },\n    },\n    {\n      props: ({ ownerState }) => ownerState.completed,\n      style: {\n        backgroundImage:\n          "linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)",\n      },\n    },\n  ],\n}));\n\nfunction ColorlibStepIcon(props: StepIconProps) {\n  const { active, completed, className } = props;\n\n  return (\n    <ColorlibStepIconRoot\n      ownerState={{ completed, active }}\n      className={className}\n    >\n      {active ? <Clock size={25} /> : <TickCircle size={25} />}\n    </ColorlibStepIconRoot>\n  );\n}\n\n// Final component\nexport const VerticleStepper = ({\n  steps,\n  activeStep,\n}: VerticleStepperProps) => {\n  return (\n    <Stepper\n      activeStep={activeStep}\n      orientation="vertical"\n      connector={<ColorlibConnector />}\n    >\n      {steps.map(({ label, content }) => (\n        <Step key={label}>\n          <StepLabel StepIconComponent={ColorlibStepIcon}>\n            <Typography className="text-white">{label}</Typography>\n          </StepLabel>\n          <StepContent style={{ marginLeft: 20, marginTop: "-8px" }}>\n            <div className="border-1 rounded-2xl p-2.5 border-[rgb(242,113,33)] border-r-[rgb(260,119,33)] border-b-[rgb(210,90,33)]">\n              {content}\n            </div>\n          </StepContent>\n        </Step>\n      ))}\n    </Stepper>\n  );\n};\n'})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"\ufe0f-step-2-use-the-component",children:"\u2699\ufe0f Step 2: Use the Component"}),"\n",(0,a.jsxs)(t.p,{children:["You can now import and use the ",(0,a.jsx)(t.code,{children:"VerticleStepper"})," in your main page or any component:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import React from "react";\nimport { VerticleStepper } from "./VerticleStepper";\nimport { Button } from "@mui/material";\n\nexport default function Home() {\n  const [active, setActive] = React.useState(0);\n\n  return (\n    <VerticleStepper\n      activeStep={active}\n      steps={[\n        "Introduction",\n        "Index",\n        "Table of Contents",\n        "Chapter 1",\n        "Chapter 2",\n        "Chapter 3",\n        "Chapter 4",\n        "Chapter 5",\n        "Chapter 6",\n      ].map((step) => ({\n        label: step,\n        content: (\n          <div>\n            <div className="m-3">Content for the &apos;{step}&apos; step</div>\n            <div>\n              {active !== 0 && (\n                <Button onClick={() => setActive((s) => s - 1)}>Prev</Button>\n              )}\n              {active < 8 && (\n                <Button onClick={() => setActive((s) => s + 1)}>Next</Button>\n              )}\n            </div>\n          </div>\n        ),\n      }))}\n    />\n  );\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},1322:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/verticle-stepper-image-c5c28a4cc306c255e50d852cdc2e0c8a.png"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var r=n(6540);const a={},i=r.createContext(a);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},5364:e=>{e.exports=JSON.parse('{"permalink":"/blog/vertical-stepper-react-mui-tailwind","editUrl":"https://github.com/vijaypatidar/my-portfolio/tree/main/blog/2025-05-16-vertical-stepper-react-mui-tailwind/index.md","source":"@site/blog/2025-05-16-vertical-stepper-react-mui-tailwind/index.md","title":"Create Beautiful Vertical Stepper in React Using MUI + TailwindCSS","description":"Learn how to build a customizable and beautiful vertical stepper component in React with Material UI and Tailwind CSS.","date":"2025-05-16T00:00:00.000Z","tags":[{"inline":true,"label":"react","permalink":"/blog/tags/react"},{"inline":true,"label":"typescript","permalink":"/blog/tags/typescript"}],"readingTime":2.37,"hasTruncateMarker":true,"authors":[{"name":"Vijay Patidar","title":"Fullstack Software Engineer","url":"https://github.com/vijaypatidar","imageURL":"https://github.com/vijaypatidar.png","key":"vijay","page":null}],"frontMatter":{"title":"Create Beautiful Vertical Stepper in React Using MUI + TailwindCSS","description":"Learn how to build a customizable and beautiful vertical stepper component in React with Material UI and Tailwind CSS.","slug":"vertical-stepper-react-mui-tailwind","authors":["vijay"],"tags":["react","typescript"]},"unlisted":false,"prevItem":{"title":"Clean and Modular: Integrating Spring Boot with Vite + React in a Gradle Project","permalink":"/blog/spring-boot-vite-react-gradle"},"nextItem":{"title":"Setup ANTLR in Java Project and Write Grammar for Parsing Boolean Algebra Expressions","permalink":"/blog/setup-antlr-java-boolean-grammar"}}')}}]);