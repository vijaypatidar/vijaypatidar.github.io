<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://vijaypatidar.github.io/blog</id>
    <title>Vijay Patidar Blog</title>
    <updated>2025-05-14T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://vijaypatidar.github.io/blog"/>
    <subtitle>Vijay Patidar Blog</subtitle>
    <icon>https://vijaypatidar.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Setup ANTLR in Java Project and Write Grammar for Parsing Boolean Algebra Expressions]]></title>
        <id>https://vijaypatidar.github.io/blog/setup-antlr-java-boolean-grammar</id>
        <link href="https://vijaypatidar.github.io/blog/setup-antlr-java-boolean-grammar"/>
        <updated>2025-05-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn how to set up ANTLR in a Java project using Gradle and create a custom grammar to parse Boolean algebra expressions.]]></summary>
        <content type="html"><![CDATA[<p>ANTLR (Another Tool for Language Recognition) is a powerful parser generator used for reading, processing, and executing or translating structured text or binary files. In this post, you'll learn how to:</p>
<ul>
<li>Set up ANTLR in a Java project using Gradle.</li>
<li>Write a grammar for parsing Boolean algebra expressions.</li>
<li>Generate lexer and parser code using the Gradle plugin.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-add-antlr-plugin-to-buildgradle">Step 1: Add ANTLR Plugin to <code>build.gradle</code><a href="https://vijaypatidar.github.io/blog/setup-antlr-java-boolean-grammar#step-1-add-antlr-plugin-to-buildgradle" class="hash-link" aria-label="Direct link to step-1-add-antlr-plugin-to-buildgradle" title="Direct link to step-1-add-antlr-plugin-to-buildgradle">​</a></h2>
<p>First, apply the ANTLR plugin and add required dependencies.</p>
<div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">plugins {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id 'java'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id 'antlr'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">group = 'com.vkpapps'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">version = '1.0-SNAPSHOT'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">repositories {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mavenCentral()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dependencies {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    antlr "org.antlr:antlr4:4.13.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    implementation "org.antlr:antlr4-runtime:4.13.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // other dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">generateGrammarSource {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    maxHeapSize = "64m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    arguments += ["-visitor", "-long-messages"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    outputDirectory = file("build/generated/antlr/main/com/vkpapps")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sourceSets {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    main {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        java {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            srcDir "$buildDir/generated/antlr/main"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        antlr {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            srcDirs = ['src/main/antlr']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This config tells Gradle to:</p>
<ul>
<li>Use ANTLR for grammar processing.</li>
<li>Output generated sources in a specific directory.</li>
<li>Include those sources in the main source set.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-create-antlr-grammar-directory">Step 2: Create ANTLR Grammar Directory<a href="https://vijaypatidar.github.io/blog/setup-antlr-java-boolean-grammar#step-2-create-antlr-grammar-directory" class="hash-link" aria-label="Direct link to Step 2: Create ANTLR Grammar Directory" title="Direct link to Step 2: Create ANTLR Grammar Directory">​</a></h2>
<p>Create a folder named <code>antlr</code> under <code>src/main</code> to store your grammar files:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">src/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── main/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    └── antlr/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        └── BooleanAlgebra.g4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-define-the-boolean-algebra-grammar">Step 3: Define the Boolean Algebra Grammar<a href="https://vijaypatidar.github.io/blog/setup-antlr-java-boolean-grammar#step-3-define-the-boolean-algebra-grammar" class="hash-link" aria-label="Direct link to Step 3: Define the Boolean Algebra Grammar" title="Direct link to Step 3: Define the Boolean Algebra Grammar">​</a></h2>
<p>Create a file named <code>BooleanAlgebra.g4</code> and define your grammar:</p>
<div class="language-antlr codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-antlr codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grammar BooleanAlgebra;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@header {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">package com.vkpapps;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">expr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    : expr (OPERATION expr)+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | '{' expr '}'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | '[' expr ']'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | '(' expr ')'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | VARIABLE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | (VARIABLE)? '(' expr ')' (VARIABLE)?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | WS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VARIABLE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    : [a-z]+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | [a-z]+'\'' (WS)*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | [0-1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPERATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    : OR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | PRODUCT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OR      : 'OR' | 'or' | '+' ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PRODUCT : '*' ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WS : [\t\r\n]+ -&gt; skip ;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This grammar handles:</p>
<ul>
<li>Parentheses and brackets</li>
<li>Single-letter variables (like <code>a</code>, <code>b'</code>)</li>
<li>Basic operations (<code>+</code>, <code>*</code>, <code>OR</code>, etc.)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-generate-parser-and-lexer-code">Step 4: Generate Parser and Lexer Code<a href="https://vijaypatidar.github.io/blog/setup-antlr-java-boolean-grammar#step-4-generate-parser-and-lexer-code" class="hash-link" aria-label="Direct link to Step 4: Generate Parser and Lexer Code" title="Direct link to Step 4: Generate Parser and Lexer Code">​</a></h2>
<p>Use the following Gradle command to generate the parser and lexer classes:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./gradlew generateGrammarSource</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This will generate Java classes for the lexer, parser, and visitor pattern under <code>build/generated/antlr/main/com/vkpapps</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="https://vijaypatidar.github.io/blog/setup-antlr-java-boolean-grammar#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2>
<p>With the parser and lexer in place, you can now write a Java program to:</p>
<ul>
<li>Parse Boolean expressions.</li>
<li>Traverse the parse tree using the generated visitor classes.</li>
<li>Evaluate or transform expressions for your specific use case (e.g., simplification, circuit generation, etc.)</li>
</ul>]]></content>
        <category label="antlr" term="antlr"/>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setup flyway migration with spring boot]]></title>
        <id>https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot</id>
        <link href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot"/>
        <updated>2025-02-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[---]]></summary>
        <content type="html"><![CDATA[<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="slug-2025-02-10-setup-flyway-migration-with-spring-boottitle-setup-flyway-migration-with-spring-bootauthors-vijaytags-flyway-spring">slug: 2025-02-10-Setup-flyway-migration-with-spring-boot
title: Setup Flyway Migration with Spring Boot
authors: [vijay]
tags: [flyway, spring]<a href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot#slug-2025-02-10-setup-flyway-migration-with-spring-boottitle-setup-flyway-migration-with-spring-bootauthors-vijaytags-flyway-spring" class="hash-link" aria-label="Direct link to slug: 2025-02-10-Setup-flyway-migration-with-spring-boot
title: Setup Flyway Migration with Spring Boot
authors: [vijay]
tags: [flyway, spring]" title="Direct link to slug: 2025-02-10-Setup-flyway-migration-with-spring-boot
title: Setup Flyway Migration with Spring Boot
authors: [vijay]
tags: [flyway, spring]">​</a></h2>
<h1>Setup Flyway Migration with Spring Boot</h1>
<p>Database migrations are essential for maintaining consistency and version control in applications. Flyway is a popular database migration tool that integrates seamlessly with Spring Boot. In this guide, we will set up Flyway in a Spring Boot application and configure it for different environments.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-add-flyway-dependencies-in-gradle">Step 1: Add Flyway Dependencies in Gradle<a href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot#step-1-add-flyway-dependencies-in-gradle" class="hash-link" aria-label="Direct link to Step 1: Add Flyway Dependencies in Gradle" title="Direct link to Step 1: Add Flyway Dependencies in Gradle">​</a></h2>
<p>The first step is to update your <code>build.gradle</code> file to include the Flyway dependencies.</p>
<div class="language-gradle codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-gradle codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">plugins {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">group = 'com.vkpapps'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">version = '0.0.1-SNAPSHOT'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">java {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	toolchain {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		languageVersion = JavaLanguageVersion.of(21)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">configurations {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	compileOnly {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		extendsFrom annotationProcessor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">repositories {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	mavenCentral()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dependencies {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // Other dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	implementation 'org.flywaydb:flyway-core'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	implementation 'org.flywaydb:flyway-database-postgresql'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-configure-database-connection-in-applicationyaml">Step 2: Configure Database Connection in <code>application.yaml</code><a href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot#step-2-configure-database-connection-in-applicationyaml" class="hash-link" aria-label="Direct link to step-2-configure-database-connection-in-applicationyaml" title="Direct link to step-2-configure-database-connection-in-applicationyaml">​</a></h2>
<p>Next, we configure the database connection and enable Flyway in <code>application.yaml</code>:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spring</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">application</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> flyway</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">migration</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jackson</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">property-naming-strategy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> SNAKE_CASE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">datasource</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">driver-class-name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> org.postgresql.Driver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jdbc</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">postgresql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//localhost</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">5432/postgres</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain">currentSchema=flyway</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">migration</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">username</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> vijay</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jpa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">database-platform</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> org.hibernate.dialect.PostgreSQLDialect</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">hibernate</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">ddl-auto</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">properties</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">hibernate</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">format_sql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">show_sql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">flyway</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">baseline-on-migrate</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">enabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">locations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> classpath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">db/migration/common</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">classpath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">db/migration/local</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-organizing-migration-scripts-based-on-environment">Step 3: Organizing Migration Scripts Based on Environment<a href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot#step-3-organizing-migration-scripts-based-on-environment" class="hash-link" aria-label="Direct link to Step 3: Organizing Migration Scripts Based on Environment" title="Direct link to Step 3: Organizing Migration Scripts Based on Environment">​</a></h2>
<p>Flyway allows organizing migration scripts into different folders and applying them based on the environment. We configure <code>locations</code> accordingly.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="local-environment">Local Environment<a href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot#local-environment" class="hash-link" aria-label="Direct link to Local Environment" title="Direct link to Local Environment">​</a></h3>
<p>In the local environment, we also run an insert script to seed the database with dummy data:</p>
<div class="language-properties codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-properties codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">spring:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  datasource:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    driver-class-name: org.postgresql.Driver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=flyway-migration-example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    username: vijay</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    password:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  jpa:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    database-platform: org.hibernate.dialect.PostgreSQLDialect</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hibernate:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ddl-auto: update  # or "none" if schema is managed manually</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    properties:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      hibernate:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        format_sql: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        show_sql: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  flyway:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    baseline-on-migrate: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    enabled: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    locations: classpath:db/migration/common,classpath:db/migration/local</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="production-environment">Production Environment<a href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot#production-environment" class="hash-link" aria-label="Direct link to Production Environment" title="Direct link to Production Environment">​</a></h3>
<p>In production, we only run the common database migration scripts and avoid inserting dummy data:</p>
<div class="language-properties codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-properties codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">spring:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  datasource:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    driver-class-name: org.postgresql.Driver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=flyway-migration-example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    username: vijay</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    password:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  jpa:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    database-platform: org.hibernate.dialect.PostgreSQLDialect</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hibernate:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ddl-auto: none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    properties:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      hibernate:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        format_sql: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        show_sql: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  flyway:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    baseline-on-migrate: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    enabled: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    locations: classpath:db/migration/common</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://vijaypatidar.github.io/blog/2025-02-10-Setup-flyway-migration-with-spring-boot#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>Setting up Flyway in a Spring Boot application ensures seamless database migrations while maintaining version control. By structuring migrations based on environments, we can manage schema changes efficiently without affecting production stability.</p>
<p>Now that your Flyway setup is complete, you can start adding migration scripts in <code>db/migration/common</code> and <code>db/migration/local</code> folders to control database schema changes. Happy coding!</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="flyway" term="flyway"/>
        <category label="Spring" term="Spring"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Publish Android App Bundle to Play Store Using GitHub Actions]]></title>
        <id>https://vijaypatidar.github.io/blog/publish-android-app-bundle-to-play-store-using-github-actions</id>
        <link href="https://vijaypatidar.github.io/blog/publish-android-app-bundle-to-play-store-using-github-actions"/>
        <updated>2025-01-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Publishing your Android app bundle to the Google Play Store can be streamlined by automating the process with GitHub Actions. In this guide, we’ll walk you through the steps to set up a CI/CD pipeline that builds, signs, and uploads your app to the Play Store.]]></summary>
        <content type="html"><![CDATA[<p>Publishing your Android app bundle to the Google Play Store can be streamlined by automating the process with GitHub Actions. In this guide, we’ll walk you through the steps to set up a CI/CD pipeline that builds, signs, and uploads your app to the Play Store.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-configure-gradle-for-signing">Step 1: Configure Gradle for Signing<a href="https://vijaypatidar.github.io/blog/publish-android-app-bundle-to-play-store-using-github-actions#step-1-configure-gradle-for-signing" class="hash-link" aria-label="Direct link to Step 1: Configure Gradle for Signing" title="Direct link to Step 1: Configure Gradle for Signing">​</a></h2>
<p>The first step is to update your <code>build.gradle.kts</code> file to include the signing configuration. This setup ensures that the app is signed with the correct credentials during the build process.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">plugins </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">alias</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">libs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">plugins</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">android</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">application</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">alias</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">libs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">plugins</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">kotlin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">android</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">id</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"com.google.gms.google-services"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">android </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    namespace </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-literal singleline string" style="color:#e3116c">"com.vkpapps.booleanalgebra"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    compileSdk </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">35</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    defaultConfig </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">..</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    signingConfigs </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"release"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            storeFile </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">file</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"./../boolean-algebra.jks"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            storePassword </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"BOOLEAN_ALGEBRA_SIGN_STORE_PASSWORD"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            keyAlias </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"BOOLEAN_ALGEBRA_SIGN_KEY_ALIAS"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            keyPassword </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"BOOLEAN_ALGEBRA_SIGN_KEY_PASSWORD"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buildTypes </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        release </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            isMinifyEnabled </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            isShrinkResources </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            signingConfig </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> signingConfigs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getByName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"release"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            isDebuggable </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">proguardFiles</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">getDefaultProguardFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"proguard-android-optimize.txt"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string-literal singleline string" style="color:#e3116c">"proguard-rules.pro"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">..</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">..</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dependencies </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">..</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Ensure the signing keys and passwords are stored as environment variables or GitHub secrets for security.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-create-a-github-actions-workflow">Step 2: Create a GitHub Actions Workflow<a href="https://vijaypatidar.github.io/blog/publish-android-app-bundle-to-play-store-using-github-actions#step-2-create-a-github-actions-workflow" class="hash-link" aria-label="Direct link to Step 2: Create a GitHub Actions Workflow" title="Direct link to Step 2: Create a GitHub Actions Workflow">​</a></h2>
<p>Create a GitHub Actions workflow file in your repository’s <code>.github/workflows</code> directory. Name it <code>android-ci.yml</code> or a similar descriptive name.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Android CI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">push</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">branches</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">jobs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">build</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Checkout code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/checkout@v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Set up JDK 21</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/setup</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">java@v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">java-version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'17'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">distribution</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'corretto'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Grant permissions for gradlew</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> chmod +x gradlew</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Set environment variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "BOOLEAN_ALGEBRA_SIGN_STORE_PASSWORD=${{ secrets.BOOLEAN_ALGEBRA_SIGN_STORE_PASSWORD }}" &gt;&gt; $GITHUB_ENV</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "BOOLEAN_ALGEBRA_SIGN_KEY_ALIAS=${{ secrets.BOOLEAN_ALGEBRA_SIGN_KEY_ALIAS }}" &gt;&gt; $GITHUB_ENV</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "BOOLEAN_ALGEBRA_SIGN_KEY_PASSWORD=${{ secrets.BOOLEAN_ALGEBRA_SIGN_KEY_PASSWORD }}" &gt;&gt; $GITHUB_ENV</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Run unit tests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ./gradlew test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Run Lint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ./gradlew lint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Assemble Release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ./gradlew bundleRelease</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Publish to Play Store</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> r0adkll/upload</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">google</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">play@v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">serviceAccountJsonPlainText</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.GOOGLE_PLAY_CREDENTIALS </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">packageName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> com.vkpapps.booleanalgebra</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">releaseFiles</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> app/build/outputs/bundle/release/app</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">release.aab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">track</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> beta</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">status</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'completed'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This workflow builds the app, runs tests, and uploads the release bundle to the Play Store.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-add-github-secrets">Step 3: Add GitHub Secrets<a href="https://vijaypatidar.github.io/blog/publish-android-app-bundle-to-play-store-using-github-actions#step-3-add-github-secrets" class="hash-link" aria-label="Direct link to Step 3: Add GitHub Secrets" title="Direct link to Step 3: Add GitHub Secrets">​</a></h2>
<p>The workflow depends on several secrets to securely manage sensitive information. Add the following secrets to your GitHub repository:</p>
<ol>
<li><strong>BOOLEAN_ALGEBRA_SIGN_STORE_PASSWORD</strong>: Password for your keystore file.</li>
<li><strong>BOOLEAN_ALGEBRA_SIGN_KEY_ALIAS</strong>: Alias for your signing key.</li>
<li><strong>BOOLEAN_ALGEBRA_SIGN_KEY_PASSWORD</strong>: Password for your signing key.</li>
<li><strong>GOOGLE_PLAY_CREDENTIALS</strong>: JSON key for your Google Play Service Account.</li>
</ol>
<p>To add secrets:</p>
<ol>
<li>Go to your GitHub repository.</li>
<li>Navigate to <strong>Settings</strong> &gt; <strong>Secrets and variables</strong> &gt; <strong>Actions</strong>.</li>
<li>Click <strong>New repository secret</strong> and add each of the secrets listed above.</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://vijaypatidar.github.io/blog/publish-android-app-bundle-to-play-store-using-github-actions#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>By following these steps, you’ve successfully automated the publishing process for your Android app using GitHub Actions. This setup not only saves time but also ensures consistency and reliability in your CI/CD pipeline.</p>
<p>Feel free to customize the workflow based on your project’s specific needs. Happy coding!</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="CI/CD" term="CI/CD"/>
        <category label="Github Action" term="Github Action"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create Entity Classes for Relational Tables]]></title>
        <id>https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables</id>
        <link href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables"/>
        <updated>2024-12-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to Create Entity Classes for Relational Tables]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-create-entity-classes-for-relational-tables"><strong>How to Create Entity Classes for Relational Tables</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#how-to-create-entity-classes-for-relational-tables" class="hash-link" aria-label="Direct link to how-to-create-entity-classes-for-relational-tables" title="Direct link to how-to-create-entity-classes-for-relational-tables">​</a></h2>
<p>When working with Java Persistence API (JPA), defining entity classes is a critical step to map relational database tables to Java objects. In this post, we’ll explore how to create entity classes for a relational schema, focusing on best practices and solving common challenges such as composite keys.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="schema-overview"><strong>Schema Overview</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#schema-overview" class="hash-link" aria-label="Direct link to schema-overview" title="Direct link to schema-overview">​</a></h2>
<p>Consider the following relational database schema:</p>
<ul>
<li><strong>Users</strong> (<code>id</code>, <code>name</code>, <code>email</code>)</li>
<li><strong>Posts</strong> (<code>id</code>, <code>user_id</code>, <code>title</code>, <code>content</code>, <code>date</code>)</li>
<li><strong>Comments</strong> (<code>post_id</code>, <code>user_id</code>, <code>comment</code>, <code>date</code>)</li>
</ul>
<p>Here’s what each table represents:</p>
<ul>
<li><strong>Users</strong>: Stores user information.</li>
<li><strong>Posts</strong>: Represents content posted by users, linked to the <code>users</code> table.</li>
<li><strong>Comments</strong>: Stores user comments on posts, linked to both <code>posts</code> and <code>users</code>.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-entity-classes"><strong>Creating Entity Classes</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#creating-entity-classes" class="hash-link" aria-label="Direct link to creating-entity-classes" title="Direct link to creating-entity-classes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-the-user-entity"><strong>Step 1: The <code>User</code> Entity</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#step-1-the-user-entity" class="hash-link" aria-label="Direct link to step-1-the-user-entity" title="Direct link to step-1-the-user-entity">​</a></h3>
<p>The <code>User</code> entity represents the <code>users</code> table. It has a one-to-many relationship with both <code>posts</code> and <code>comments</code>.</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import jakarta.persistence.*;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.List;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Entity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Table(name = "users")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @GeneratedValue(strategy = GenerationType.IDENTITY)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Long id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private String name;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private String email;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, orphanRemoval = true)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private List&lt;Post&gt; posts;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, orphanRemoval = true)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private List&lt;Comment&gt; comments;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Getters and Setters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-the-post-entity"><strong>Step 2: The <code>Post</code> Entity</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#step-2-the-post-entity" class="hash-link" aria-label="Direct link to step-2-the-post-entity" title="Direct link to step-2-the-post-entity">​</a></h3>
<p>The <code>Post</code> entity maps the <code>posts</code> table. It has a <code>ManyToOne</code> relationship with <code>User</code> and a <code>OneToMany</code> relationship with <code>Comment</code>.</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import jakarta.persistence.*;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.LocalDate;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.List;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Entity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Table(name = "posts")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class Post {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @GeneratedValue(strategy = GenerationType.IDENTITY)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Long id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @ManyToOne</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @JoinColumn(name = "user_id", nullable = false)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private User user;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private String title;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private String content;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private LocalDate date;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @OneToMany(mappedBy = "post", cascade = CascadeType.ALL, orphanRemoval = true)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private List&lt;Comment&gt; comments;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Getters and Setters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-the-comment-entity-with-a-composite-key"><strong>Step 3: The <code>Comment</code> Entity with a Composite Key</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#step-3-the-comment-entity-with-a-composite-key" class="hash-link" aria-label="Direct link to step-3-the-comment-entity-with-a-composite-key" title="Direct link to step-3-the-comment-entity-with-a-composite-key">​</a></h3>
<p>Unlike the <code>User</code> and <code>Post</code> entities, the <code>Comment</code> entity uses a composite primary key (<code>post_id</code>, <code>user_id</code>). This eliminates the need for a separate <code>id</code> field. Here’s how to implement it:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="composite-key-class-commentid"><strong>Composite Key Class (<code>CommentId</code>)</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#composite-key-class-commentid" class="hash-link" aria-label="Direct link to composite-key-class-commentid" title="Direct link to composite-key-class-commentid">​</a></h4>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import jakarta.persistence.Embeddable;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.io.Serializable;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.Objects;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Embeddable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class CommentId implements Serializable {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Long postId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Long userId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Default constructor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public CommentId() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public CommentId(Long postId, Long userId) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        this.postId = postId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        this.userId = userId;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Getters and Setters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Override equals() and hashCode()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public boolean equals(Object o) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (this == o) return true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (o == null || getClass() != o.getClass()) return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CommentId that = (CommentId) o;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return Objects.equals(postId, that.postId) &amp;&amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               Objects.equals(userId, that.userId);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public int hashCode() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return Objects.hash(postId, userId);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="the-comment-entity"><strong>The <code>Comment</code> Entity</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#the-comment-entity" class="hash-link" aria-label="Direct link to the-comment-entity" title="Direct link to the-comment-entity">​</a></h4>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import jakarta.persistence.*;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.time.LocalDate;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Entity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@Table(name = "comments")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class Comment {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @EmbeddedId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private CommentId id;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @ManyToOne</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @MapsId("postId")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @JoinColumn(name = "post_id", nullable = false)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Post post;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @ManyToOne</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @MapsId("userId")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @JoinColumn(name = "user_id", nullable = false)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private User user;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private String comment;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private LocalDate date;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Getters and Setters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-takeaways"><strong>Key Takeaways</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#key-takeaways" class="hash-link" aria-label="Direct link to key-takeaways" title="Direct link to key-takeaways">​</a></h2>
<ol>
<li>
<p><strong>Relationships</strong>:</p>
<ul>
<li>Use <code>@ManyToOne</code> and <code>@OneToMany</code> for parent-child relationships.</li>
<li>For bidirectional relationships, annotate the owning side.</li>
</ul>
</li>
<li>
<p><strong>Composite Keys</strong>:</p>
<ul>
<li>Define a separate <code>@Embeddable</code> class to represent composite keys.</li>
<li>Use <code>@EmbeddedId</code> in the entity and <code>@MapsId</code> to map foreign keys.</li>
</ul>
</li>
<li>
<p><strong>Database Integrity</strong>:</p>
<ul>
<li>Ensure relationships are managed correctly with cascading and orphan removal policies.</li>
</ul>
</li>
<li>
<p><strong>Best Practices</strong>:</p>
<ul>
<li>Always override <code>equals()</code> and <code>hashCode()</code> in composite key classes.</li>
<li>Keep your entities simple and focused on mapping rather than business logic.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion"><strong>Conclusion</strong><a href="https://vijaypatidar.github.io/blog/how-to-create-entity-classes-for-relational-tables#conclusion" class="hash-link" aria-label="Direct link to conclusion" title="Direct link to conclusion">​</a></h2>
<p>By following these steps, you can create robust JPA entity classes tailored to your database schema. Whether you're using simple primary keys or composite keys, understanding JPA annotations and relationships is key to building scalable applications.</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="JPA" term="JPA"/>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Spring Boot Starter]]></title>
        <id>https://vijaypatidar.github.io/blog/what-is-spring-boot-starters</id>
        <link href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters"/>
        <updated>2024-11-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>Spring Boot starters are predefined templates or dependencies that simplify the process of setting up a Spring Boot application. They eliminate the need to manually define numerous dependencies, ensuring compatibility and reducing configuration effort.</p>
<p>Here’s a list of commonly used Spring Boot starters and their purposes:</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="core-starters"><strong>Core Starters</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#core-starters" class="hash-link" aria-label="Direct link to core-starters" title="Direct link to core-starters">​</a></h2>
<ol>
<li>
<p><strong>spring-boot-starter</strong></p>
<ul>
<li>Base starter for any Spring Boot application.</li>
<li>Includes essential dependencies like Spring Core, Logging, etc.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-test</strong></p>
<ul>
<li>Starter for testing Spring Boot applications.</li>
<li>Includes JUnit, Mockito, Spring Test, and AssertJ.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="web-development"><strong>Web Development</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#web-development" class="hash-link" aria-label="Direct link to web-development" title="Direct link to web-development">​</a></h2>
<ol start="3">
<li>
<p><strong>spring-boot-starter-web</strong></p>
<ul>
<li>For building RESTful web applications.</li>
<li>Includes Spring MVC, Jackson (for JSON processing), and embedded Tomcat.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-webflux</strong></p>
<ul>
<li>For reactive web applications using Project Reactor and WebFlux.</li>
<li>Includes Netty or Tomcat for reactive web servers.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="data-access"><strong>Data Access</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#data-access" class="hash-link" aria-label="Direct link to data-access" title="Direct link to data-access">​</a></h2>
<ol start="5">
<li>
<p><strong>spring-boot-starter-data-jpa</strong></p>
<ul>
<li>For JPA-based repositories and Hibernate ORM.</li>
<li>Includes Spring Data JPA and an H2 database.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-data-mongodb</strong></p>
<ul>
<li>For MongoDB support.</li>
<li>Includes Spring Data MongoDB.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-data-redis</strong></p>
<ul>
<li>For Redis data access.</li>
<li>Includes Spring Data Redis and Lettuce.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-jdbc</strong></p>
<ul>
<li>For traditional JDBC-based database access.</li>
<li>Includes Spring JDBC and DataSource support.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="security"><strong>Security</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#security" class="hash-link" aria-label="Direct link to security" title="Direct link to security">​</a></h2>
<ol start="9">
<li><strong>spring-boot-starter-security</strong>
<ul>
<li>Adds Spring Security to your application.</li>
<li>Supports authentication, authorization, and secure login mechanisms.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="messaging"><strong>Messaging</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#messaging" class="hash-link" aria-label="Direct link to messaging" title="Direct link to messaging">​</a></h2>
<ol start="10">
<li>
<p><strong>spring-boot-starter-amqp</strong></p>
<ul>
<li>For RabbitMQ messaging.</li>
<li>Includes Spring AMQP.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-activemq</strong></p>
<ul>
<li>For ActiveMQ messaging.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-kafka</strong></p>
<ul>
<li>For Apache Kafka messaging.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cloud--configuration"><strong>Cloud &amp; Configuration</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#cloud--configuration" class="hash-link" aria-label="Direct link to cloud--configuration" title="Direct link to cloud--configuration">​</a></h2>
<ol start="13">
<li>
<p><strong>spring-boot-starter-actuator</strong></p>
<ul>
<li>Adds production-ready features like monitoring and metrics endpoints.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-cloud-config</strong></p>
<ul>
<li>For using Spring Cloud Config to manage configuration across environments.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="template-engines"><strong>Template Engines</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#template-engines" class="hash-link" aria-label="Direct link to template-engines" title="Direct link to template-engines">​</a></h2>
<ol start="15">
<li>
<p><strong>spring-boot-starter-thymeleaf</strong></p>
<ul>
<li>For server-side rendering with Thymeleaf templates.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-freemarker</strong></p>
<ul>
<li>For server-side rendering with FreeMarker templates.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="others"><strong>Others</strong><a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#others" class="hash-link" aria-label="Direct link to others" title="Direct link to others">​</a></h2>
<ol start="17">
<li>
<p><strong>spring-boot-starter-batch</strong></p>
<ul>
<li>For batch processing using Spring Batch.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-cache</strong></p>
<ul>
<li>Adds caching capabilities to your application.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-mail</strong></p>
<ul>
<li>For sending emails.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-validation</strong></p>
<ul>
<li>For data validation using Hibernate Validator.</li>
</ul>
</li>
<li>
<p><strong>spring-boot-starter-aop</strong></p>
<ul>
<li>Adds support for aspect-oriented programming using Spring AOP.</li>
</ul>
</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-use-spring-boot-starters">Why Use Spring Boot Starters?<a href="https://vijaypatidar.github.io/blog/what-is-spring-boot-starters#why-use-spring-boot-starters" class="hash-link" aria-label="Direct link to Why Use Spring Boot Starters?" title="Direct link to Why Use Spring Boot Starters?">​</a></h2>
<ul>
<li><strong>Reduced Configuration:</strong> Predefined dependencies ensure compatibility.</li>
<li><strong>Improved Productivity:</strong> Faster setup time for new projects.</li>
<li><strong>Focused Development:</strong> You can focus on business logic instead of boilerplate code.</li>
</ul>
<p>Would you like me to structure this further or add examples for specific starters?</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="Spring" term="Spring"/>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Spring Framework]]></title>
        <id>https://vijaypatidar.github.io/blog/what-is-spring-and-spring-boot</id>
        <link href="https://vijaypatidar.github.io/blog/what-is-spring-and-spring-boot"/>
        <updated>2024-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Spring Framework]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="spring-framework">Spring Framework<a href="https://vijaypatidar.github.io/blog/what-is-spring-and-spring-boot#spring-framework" class="hash-link" aria-label="Direct link to Spring Framework" title="Direct link to Spring Framework">​</a></h2>
<p>The <strong>Spring Framework</strong> is a comprehensive and widely-used framework in the Java ecosystem for building enterprise-level applications. Its core feature is <strong>dependency injection (DI)</strong>, which helps with the loose coupling of components, making applications easier to manage and test. Spring provides many modules for various tasks, like web development, data access, messaging, and more, making it highly modular and suitable for a variety of projects.</p>
<p><strong>Key Features of Spring Framework</strong>:</p>
<ol>
<li><strong>Dependency Injection (DI)</strong> and <strong>Inversion of Control (IoC)</strong>: Simplifies object creation and dependency handling.</li>
<li><strong>Aspect-Oriented Programming (AOP)</strong>: Adds cross-cutting concerns like logging and transaction management.</li>
<li><strong>Data Access</strong>: Supports integration with JDBC, JPA, Hibernate, and other data access technologies.</li>
<li><strong>Web Development</strong>: Spring MVC (Model-View-Controller) module helps in building web applications.</li>
<li><strong>Modularity</strong>: Has different modules like Spring Core, Spring Data, Spring Web, Spring Security, etc.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="spring-boot">Spring Boot<a href="https://vijaypatidar.github.io/blog/what-is-spring-and-spring-boot#spring-boot" class="hash-link" aria-label="Direct link to Spring Boot" title="Direct link to Spring Boot">​</a></h2>
<p><strong>Spring Boot</strong> is a project built on top of the Spring Framework that aims to simplify the process of creating stand-alone, production-ready Spring applications. It abstracts away much of the configuration and boilerplate code that is traditionally associated with setting up a Spring project. With Spring Boot, you can get a Spring application up and running with minimal setup.</p>
<p><strong>Key Features of Spring Boot</strong>:</p>
<ol>
<li><strong>Auto-Configuration</strong>: Automatically configures your application based on the dependencies you include in the project.</li>
<li><strong>Standalone Applications</strong>: Allows you to create standalone applications that run with <code>java -jar</code> commands.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded servers (like Tomcat, Jetty), so you don’t need to deploy the application to an external server.</li>
<li><strong>Spring Boot Starters</strong>: Simplifies dependency management by providing pre-configured sets of libraries (Starters) for different use cases (e.g., <code>spring-boot-starter-web</code> for web applications).</li>
<li><strong>Production-Ready Features</strong>: Provides metrics, health checks, and externalized configuration to help in production management.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="relationship-between-spring-framework-and-spring-boot">Relationship Between Spring Framework and Spring Boot<a href="https://vijaypatidar.github.io/blog/what-is-spring-and-spring-boot#relationship-between-spring-framework-and-spring-boot" class="hash-link" aria-label="Direct link to Relationship Between Spring Framework and Spring Boot" title="Direct link to Relationship Between Spring Framework and Spring Boot">​</a></h2>
<ul>
<li><strong>Spring Framework</strong> is the foundation of Spring-based projects and includes all the core functionalities, like DI, AOP, and MVC. Spring Boot, however, is built on top of the Spring Framework to simplify the process of developing Spring applications.</li>
<li><strong>Spring Boot</strong> is not a replacement but an enhancement for the Spring Framework, offering tools and defaults that help developers to rapidly create applications without writing too much configuration.</li>
<li><strong>Spring Boot</strong> leverages the components of the Spring Framework but adds its layer of abstraction, allowing for quick setup and ready-to-use defaults, especially useful for microservices and RESTful APIs.</li>
</ul>
<p>In summary, <strong>Spring Framework</strong> provides the core infrastructure, while <strong>Spring Boot</strong> makes it easier to create applications with Spring by reducing configuration and simplifying the setup process.</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="Spring" term="Spring"/>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[When to choose MySql vs PostgreSql relation databse]]></title>
        <id>https://vijaypatidar.github.io/blog/When-to-choose-MySql-vs-PostgreSql-relation-databse</id>
        <link href="https://vijaypatidar.github.io/blog/When-to-choose-MySql-vs-PostgreSql-relation-databse"/>
        <updated>2024-09-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Choosing between MySQL and PostgreSQL depends on your project requirements, data complexity, and specific use cases. Here’s a breakdown of when to choose each:]]></summary>
        <content type="html"><![CDATA[<p>Choosing between MySQL and PostgreSQL depends on your project requirements, data complexity, and specific use cases. Here’s a breakdown of when to choose each:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="when-to-choose-mysql"><strong>When to Choose MySQL</strong><a href="https://vijaypatidar.github.io/blog/When-to-choose-MySql-vs-PostgreSql-relation-databse#when-to-choose-mysql" class="hash-link" aria-label="Direct link to when-to-choose-mysql" title="Direct link to when-to-choose-mysql">​</a></h2>
<ol>
<li><strong>Simplicity and Ease of Use</strong>: Ideal for beginners or small applications where quick setup and ease of management are priorities.</li>
</ol>
<ol start="2">
<li>
<p><strong>Read-Heavy Workloads</strong>: Best suited for applications with high read-to-write ratios, such as content management systems or websites with static data.</p>
</li>
<li>
<p><strong>Speed</strong>: MySQL can outperform PostgreSQL in certain read-heavy scenarios due to its optimization for fast reads.</p>
</li>
<li>
<p><strong>Web Applications</strong>: Commonly used in web applications, especially with PHP and frameworks like WordPress.</p>
</li>
<li>
<p><strong>Replication Needs</strong>: Offers simpler replication features, making it a good choice for applications requiring master-slave replication.</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="when-to-choose-postgresql"><strong>When to Choose PostgreSQL</strong><a href="https://vijaypatidar.github.io/blog/When-to-choose-MySql-vs-PostgreSql-relation-databse#when-to-choose-postgresql" class="hash-link" aria-label="Direct link to when-to-choose-postgresql" title="Direct link to when-to-choose-postgresql">​</a></h2>
<ol>
<li>
<p><strong>Complex Queries</strong>: Preferred for applications requiring complex queries, advanced data types, and powerful analytical capabilities.</p>
</li>
<li>
<p><strong>Data Integrity and Compliance</strong>: Stronger support for ACID compliance, making it suitable for applications that demand data integrity, such as financial systems.</p>
</li>
<li>
<p><strong>Advanced Features</strong>: Supports advanced features like full-text search, JSONB data type, and GIS capabilities (PostGIS).</p>
</li>
<li>
<p><strong>Concurrency</strong>: Better at handling concurrent transactions due to its MVCC (Multiversion Concurrency Control) architecture.</p>
</li>
<li>
<p><strong>Extensibility</strong>: Allows for custom data types, functions, and operators, making it highly customizable for specialized applications.</p>
</li>
<li>
<p><strong>Geospatial Data</strong>: Excellent choice if you need to handle geospatial data with complex queries.</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="considerations-for-both"><strong>Considerations for Both</strong><a href="https://vijaypatidar.github.io/blog/When-to-choose-MySql-vs-PostgreSql-relation-databse#considerations-for-both" class="hash-link" aria-label="Direct link to considerations-for-both" title="Direct link to considerations-for-both">​</a></h2>
<ul>
<li><strong>Community and Support</strong>: Both databases have strong communities and plenty of resources available.</li>
<li><strong>Hosting</strong>: Check if your hosting provider supports the database of your choice and offers optimized configurations.</li>
<li><strong>Migration Plans</strong>: If you plan to scale your application, consider how easy it is to migrate from one database to another.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion"><strong>Conclusion</strong><a href="https://vijaypatidar.github.io/blog/When-to-choose-MySql-vs-PostgreSql-relation-databse#conclusion" class="hash-link" aria-label="Direct link to conclusion" title="Direct link to conclusion">​</a></h2>
<ul>
<li>Choose <strong>MySQL</strong> for simpler, read-heavy applications with less complexity.</li>
<li>Opt for <strong>PostgreSQL</strong> when you need advanced features, complex queries, and robust data integrity.</li>
</ul>
<p>Evaluate your specific use case and performance requirements to make the best choice!</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="Database" term="Database"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Instrumenting Spring Boot Applications with OpenTelemetry (Without Java Agent)]]></title>
        <id>https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent</id>
        <link href="https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent"/>
        <updated>2024-08-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction"><strong>Introduction</strong><a href="https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent#introduction" class="hash-link" aria-label="Direct link to introduction" title="Direct link to introduction">​</a></h2>
<p>In modern distributed systems, observability is crucial for monitoring application performance and troubleshooting issues. OpenTelemetry (OTel) is a powerful tool for collecting telemetry data such as traces, metrics, and logs. In this guide, we'll walk through how to instrument a Spring Boot application with OpenTelemetry without using the Java agent, and how to export the telemetry data to Jaeger using Docker.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-setting-up-opentelemetry-in-spring-boot"><strong>Step 1: Setting Up OpenTelemetry in Spring Boot</strong><a href="https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent#step-1-setting-up-opentelemetry-in-spring-boot" class="hash-link" aria-label="Direct link to step-1-setting-up-opentelemetry-in-spring-boot" title="Direct link to step-1-setting-up-opentelemetry-in-spring-boot">​</a></h2>
<p>First, you'll need to add the necessary OpenTelemetry dependencies to your Spring Boot project. Here's how to do it with Gradle:</p>
<div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dependencies {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.6.0"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>These dependencies bring in the OpenTelemetry SDK and the Spring Boot starter, which helps in auto-configuring the instrumentation of your application.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-configuring-opentelemetry-in-spring-boot"><strong>Step 2: Configuring OpenTelemetry in Spring Boot</strong><a href="https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent#step-2-configuring-opentelemetry-in-spring-boot" class="hash-link" aria-label="Direct link to step-2-configuring-opentelemetry-in-spring-boot" title="Direct link to step-2-configuring-opentelemetry-in-spring-boot">​</a></h2>
<p>Next, configure OpenTelemetry in your <code>application.yml</code> (or <code>application.properties</code>) to define how traces are exported and propagated:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">otel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">traces</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">exporter</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> otlp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">exporter</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">otlp</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">endpoint</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//localhost</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">4317</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">protocol</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> grpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">propagators</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> tracecontext</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resource</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">attributes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">deployment.environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> dev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">service</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> webflux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> spring</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here’s what each part does:</p>
<ul>
<li><strong>traces.exporter.otlp</strong>: Specifies the OTLP (OpenTelemetry Protocol) as the exporter.</li>
<li><strong>exporter.otlp.endpoint</strong>: The endpoint where the traces will be sent.</li>
<li><strong>propagators</strong>: Configures the trace context propagation.</li>
<li><strong>resource.attributes</strong>: Adds metadata like environment and service name to the traces.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-running-jaeger-with-docker-compose"><strong>Step 3: Running Jaeger with Docker Compose</strong><a href="https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent#step-3-running-jaeger-with-docker-compose" class="hash-link" aria-label="Direct link to step-3-running-jaeger-with-docker-compose" title="Direct link to step-3-running-jaeger-with-docker-compose">​</a></h2>
<p>To visualize the traces, you'll need a tool like Jaeger. Here’s a <code>docker-compose.yml</code> setup that runs Jaeger with Elasticsearch as the storage backend:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"3.7"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jaeger-collector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jaegertracing/jaeger</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">collector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">1.40</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> COLLECTOR_OTLP_ENABLED=true </span><span class="token comment" style="color:#999988;font-style:italic"># Enable OTLP endpoint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> SPAN_STORAGE_TYPE=elasticsearch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ES_SERVER_URLS=http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//elasticsearch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">9200</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"14250:14250"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># OTLP gRPC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"14268:14268"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># Jaeger HTTP Thrift</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"4317:4317"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># OTLP gRPC for traces</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"4318:4318"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># OTLP HTTP for traces</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">depends_on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> elasticsearch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> jaeger</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">network</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jaeger-query</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jaegertracing/jaeger</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">query</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">1.40</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> SPAN_STORAGE_TYPE=elasticsearch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ES_SERVER_URLS=http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//elasticsearch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">9200</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"16686:16686"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># Jaeger UI</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">depends_on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> jaeger</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">collector</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> jaeger</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">network</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">elasticsearch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> docker.elastic.co/elasticsearch/elasticsearch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">7.10.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> discovery.type=single</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"9200:9200"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> jaeger</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">network</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jaeger-network</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">driver</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bridge</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This setup creates three services:</p>
<ul>
<li><strong>Jaeger Collector</strong>: Collects traces from your application.</li>
<li><strong>Jaeger Query</strong>: Provides a UI to view and query traces.</li>
<li><strong>Elasticsearch</strong>: Stores the trace data.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-testing-the-setup"><strong>Step 4: Testing the Setup</strong><a href="https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent#step-4-testing-the-setup" class="hash-link" aria-label="Direct link to step-4-testing-the-setup" title="Direct link to step-4-testing-the-setup">​</a></h2>
<p>Once everything is configured, start your application and the Docker Compose setup. Generate some traffic in your application to produce traces. You should see the traces appear in the Jaeger UI at <code>http://localhost:16686</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion"><strong>Conclusion</strong><a href="https://vijaypatidar.github.io/blog/Instrumenting-Spring-Boot-Applications-with-OpenTelemetry-Without-Java-Agent#conclusion" class="hash-link" aria-label="Direct link to conclusion" title="Direct link to conclusion">​</a></h2>
<p>By following these steps, you've successfully instrumented your Spring Boot application with OpenTelemetry, configured it to export traces to Jaeger, and visualized the traces without using the OpenTelemetry Java agent. This approach offers flexibility and control over how your application is instrumented.</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What Is Stream In java]]></title>
        <id>https://vijaypatidar.github.io/blog/what-is-stream-in-java</id>
        <link href="https://vijaypatidar.github.io/blog/what-is-stream-in-java"/>
        <updated>2024-06-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://vijaypatidar.github.io/blog/what-is-stream-in-java#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>A sequence of elements in Java that supports several methods that can be pipelined to achieve a desired outcome is called a stream. Originally included in Java 8 as a component of the java.util.stream package, streams are a part of the Java Collections Framework. They are made to manipulate data declaratively, much like SQL does with information kept in tables.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-characteristics-of-streams">Key Characteristics of Streams<a href="https://vijaypatidar.github.io/blog/what-is-stream-in-java#key-characteristics-of-streams" class="hash-link" aria-label="Direct link to Key Characteristics of Streams" title="Direct link to Key Characteristics of Streams">​</a></h2>
<ol>
<li><strong>Sequence of Elements</strong>: A stream provides a sequence of elements, where each element is processed one at a time.</li>
<li><strong>Functional in Nature</strong>: Operations on a stream are performed using a functional programming approach, allowing for concise and readable code.</li>
<li><strong>Lazy Evaluation</strong>: Stream operations are lazy; they are not executed until a terminal operation is invoked. This allows for optimization and efficient processing.</li>
<li><strong>Parallel Processing</strong>: Streams can be easily parallelized, making it simple to perform operations on multiple elements concurrently.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="types-of-stream-operations">Types of Stream Operations<a href="https://vijaypatidar.github.io/blog/what-is-stream-in-java#types-of-stream-operations" class="hash-link" aria-label="Direct link to Types of Stream Operations" title="Direct link to Types of Stream Operations">​</a></h2>
<p>There are two main types of stream operations: intermediate and terminal operations.</p>
<p><strong>Intermediate Operations</strong>:</p>
<ul>
<li>These operations return a new stream and are lazy, meaning they do not trigger any processing until a terminal operation is invoked.</li>
<li>Examples include <code>filter()</code>, <code>map()</code>, <code>flatMap()</code>, <code>distinct()</code>, <code>sorted()</code>, and <code>limit()</code>.</li>
</ul>
<p><strong>Terminal Operations</strong>:</p>
<ul>
<li>These operations trigger the actual processing of the stream and produce a result or a side-effect.</li>
<li>Examples include <code>forEach()</code>, <code>collect()</code>, <code>reduce()</code>, <code>count()</code>, <code>findFirst()</code>, and <code>allMatch()</code>.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-streams">Creating Streams<a href="https://vijaypatidar.github.io/blog/what-is-stream-in-java#creating-streams" class="hash-link" aria-label="Direct link to Creating Streams" title="Direct link to Creating Streams">​</a></h2>
<p>Streams can be created from various data sources such as collections, arrays, and I/O channels. Here are some examples:</p>
<p><strong>From Collections</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;String&gt; list = Arrays.asList("a", "b", "c");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Stream&lt;String&gt; stream = list.stream();</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>From Arrays</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">String[] array = {"a", "b", "c"};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Stream&lt;String&gt; stream = Arrays.stream(array);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>From Lines of a File</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Stream&lt;String&gt; lines = Files.lines(Paths.get("file.txt"));</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>From Values</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Stream&lt;String&gt; stream = Stream.of("a", "b", "c");</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="common-stream-operations">Common Stream Operations<a href="https://vijaypatidar.github.io/blog/what-is-stream-in-java#common-stream-operations" class="hash-link" aria-label="Direct link to Common Stream Operations" title="Direct link to Common Stream Operations">​</a></h2>
<p>Here are some common operations performed on streams:</p>
<p><strong>Filtering</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;String&gt; filteredList = list.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                .filter(s -&gt; s.startsWith("a"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                .collect(Collectors.toList());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Mapping</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;Integer&gt; lengths = list.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .map(String::length)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .collect(Collectors.toList());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Reducing</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Optional&lt;String&gt; concatenated = list.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    .reduce((s1, s2) -&gt; s1 + s2);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Collecting</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;String&gt; collected = list.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             .sorted()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             .collect(Collectors.toList());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Parallel Streams</strong>:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;String&gt; parallelList = list.parallelStream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                .filter(s -&gt; s.startsWith("a"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                .collect(Collectors.toList());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="example-usage">Example Usage<a href="https://vijaypatidar.github.io/blog/what-is-stream-in-java#example-usage" class="hash-link" aria-label="Direct link to Example Usage" title="Direct link to Example Usage">​</a></h2>
<p>Here's a complete example that demonstrates the use of various stream operations:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.Arrays;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.List;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.util.stream.Collectors;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class StreamExample {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;String&gt; names = Arrays.asList("Ram", "Krishna", "Chanakya", "Patel", "Lakshman");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Convert all names to uppercase and filter names that start with 'A'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        List&lt;String&gt; result = names.stream()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                   .map(String::toUpperCase)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                   .filter(name -&gt; name.startsWith("R"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                   .collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // Print the result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        result.forEach(System.out::println);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this example, the <code>names</code> list is converted to a stream, each name is mapped to its uppercase form, filtered to retain names starting with <code>R</code>, and then collected into a new list, which is printed to the console.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://vijaypatidar.github.io/blog/what-is-stream-in-java#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>Streams in Java provide a powerful and flexible way to perform complex data processing tasks in a declarative and efficient manner. They enable functional-style operations on collections of elements, making it easier to write concise and readable code.</p>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="Java" term="Java"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build Docker Image Using Jib]]></title>
        <id>https://vijaypatidar.github.io/blog/build-docker-image-using-jib</id>
        <link href="https://vijaypatidar.github.io/blog/build-docker-image-using-jib"/>
        <updated>2024-06-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Docker Build]]></summary>
        <content type="html"><![CDATA[<p><img decoding="async" loading="lazy" alt="Docker Build" src="https://vijaypatidar.github.io/assets/images/docker-build-05d797831f0942b183f15ea01c423f40.png" width="1280" height="720" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="overview">Overview<a href="https://vijaypatidar.github.io/blog/build-docker-image-using-jib#overview" class="hash-link" aria-label="Direct link to Overview" title="Direct link to Overview">​</a></h2>
<p>This blog post introduces Jib, a powerful tool for building optimized Docker images for Java applications. Jib stands out by eliminating the need for a Docker daemon and expertise in Docker best practices, making it a convenient option for developers. Integrated as a plugin in Gradle or Maven projects, Jib simplifies the process of containerizing Java applications.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-jib">What is Jib?<a href="https://vijaypatidar.github.io/blog/build-docker-image-using-jib#what-is-jib" class="hash-link" aria-label="Direct link to What is Jib?" title="Direct link to What is Jib?">​</a></h2>
<p>Jib builds optimized Docker images for your Java applications without a Docker daemon or deep mastery of Docker best practices.
You can use it as a plugin in your Gradle or Maven project.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-configure-gradle-to-use-jib">Let's configure gradle to use Jib<a href="https://vijaypatidar.github.io/blog/build-docker-image-using-jib#lets-configure-gradle-to-use-jib" class="hash-link" aria-label="Direct link to Let's configure gradle to use Jib" title="Direct link to Let's configure gradle to use Jib">​</a></h2>
<p>Jib is used as a plugin, so we need to update the <code>build.gradle</code> file. We simply need to add the Jib plugin and define the Jib configuration block.</p>
<div class="language-gradle codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">build.gradle</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-gradle codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">plugins {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    . . .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id 'com.google.cloud.tools.jib' version '3.1.1'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">. . .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jib {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    from {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        image = "amazoncorretto:11"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    to {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        image = "docker.io/vijaypatidar31/webflux"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tags = ["latest", version]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    container {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        mainClass = "com.vkpapps.demo.CoolSpringWebfluxApplication"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        jvmFlags = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ports = ["443"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="build-and-publish-image-to-docker-registry">Build And Publish Image To Docker Registry<a href="https://vijaypatidar.github.io/blog/build-docker-image-using-jib#build-and-publish-image-to-docker-registry" class="hash-link" aria-label="Direct link to Build And Publish Image To Docker Registry" title="Direct link to Build And Publish Image To Docker Registry">​</a></h2>
<p>After configuring the jib block, you can run a gradle task to build and publish an image to the Docker registry (gradle jib).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="benefits">Benefits<a href="https://vijaypatidar.github.io/blog/build-docker-image-using-jib#benefits" class="hash-link" aria-label="Direct link to Benefits" title="Direct link to Benefits">​</a></h2>
<ul>
<li>Using Jib over a traditional Dockerfile for building and packaging Java applications offers several benefits:</li>
<li>Simplified Configuration: Integrates with Gradle/Maven, eliminating the need for a separate Dockerfile.</li>
<li>Faster Builds: Uses advanced caching mechanisms, reducing the need to rebuild unchanged layers.</li>
<li>Reproducible Builds: Ensures builds are reproducible by isolating the build environment from the runtime environment.</li>
<li>No Docker Daemon Required: Builds Docker images without requiring a Docker daemon, suitable for CI/CD pipelines or restricted environments.</li>
<li>Automatic Base Image Updates: This can automatically pull the latest base image, ensuring the use of up-to-date images with the latest security patches.</li>
<li>Layered Image Construction: Automatically separates the application into layers, optimizing the build and pushing process.</li>
<li>Integration with Container Registries: Seamlessly integrates with popular container registries, making it easy to push images directly from your build tool.</li>
<li>Advanced Configuration Options: Provides options for customizing the image build, such as specifying entry points, environment variables, JVM flags, and exposed ports.</li>
</ul>]]></content>
        <author>
            <name>Vijay Patidar</name>
            <uri>https://github.com/vijaypatidar</uri>
        </author>
        <category label="Java" term="Java"/>
        <category label="Spring" term="Spring"/>
    </entry>
</feed>